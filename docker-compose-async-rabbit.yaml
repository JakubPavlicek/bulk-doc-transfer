services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.1.4-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=rabbit
      - RABBITMQ_DEFAULT_PASS=rabbit
    healthcheck:
      # https://www.rabbitmq.com/docs/monitoring#stage-3
      test: rabbitmq-diagnostics --quiet check_running && rabbitmq-diagnostics --quiet check_local_alarms
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5672:5672'
    networks:
      - backend

  rabbitmq-app:
    container_name: rabbitmq-app
    image: rabbitmq-app:1.0.0
    pull_policy: never
    environment:
      THC_PATH: /actuator/health
      THC_PORT: 8020
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/doc_submission_db
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/workspace/health-check" ]
      start_period: 8s
      timeout: 5s
      retries: 5
    ports:
      - "8020:8020"
    networks:
      - backend
      - frontend

  next-client:
    extends:
      file: docker-compose.yaml
      service: next-client
    depends_on:
      rabbitmq-app:
        condition: service_healthy