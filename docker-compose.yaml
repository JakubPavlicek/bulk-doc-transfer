services:
  postgres:
    container_name: postgres
    image: postgres:18.0-alpine3.22
    profiles:
      - jms
      - rabbit
      - synchronous
    environment:
      POSTGRES_DB: doc_submission_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d doc_submission_db" ]
      interval: 8s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - backend

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.1.4-management-alpine
    profiles:
      - rabbit
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    healthcheck:
      # https://www.rabbitmq.com/docs/monitoring#stage-3
      test: rabbitmq-diagnostics --quiet check_running && rabbitmq-diagnostics --quiet check_local_alarms
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - backend

  jms-app:
    container_name: jms-app
    build:
      context: ./jms-app
      dockerfile: Dockerfile
      tags:
        - jms-app:1.0.0
    profiles:
      - jms
    environment:
      THC_PATH: /actuator/health
      THC_PORT: 8020
      TZ: Europe/Prague
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/doc_submission_db
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -T5 -qO- http://localhost:8080/actuator/health | grep UP || exit 1" ]
      start_period: 8s
      timeout: 5s
      retries: 5
    ports:
      - "8080:8080"
    networks:
      - backend

  rabbitmq-app:
    container_name: rabbitmq-app
    image: rabbitmq-app:1.0.0
    pull_policy: never
    profiles:
      - rabbit
    environment:
      THC_PATH: /actuator/health
      THC_PORT: 8020
      TZ: Europe/Prague
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/doc_submission_db
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/workspace/health-check" ]
      start_period: 8s
      timeout: 5s
      retries: 5
    ports:
      - "8020:8020"
    networks:
      - backend

  synchronous-app:
    container_name: synchronous-app
    image: synchronous-app:1.0.0
    pull_policy: never
    profiles:
      - synchronous
    environment:
      THC_PATH: /actuator/health
      THC_PORT: 8010
      TZ: Europe/Prague
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/doc_submission_db
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/workspace/health-check" ]
      start_period: 8s
      timeout: 5s
      retries: 5
    ports:
      - "8010:8010"
    networks:
      - backend

networks:
  backend:

volumes:
  postgres_data: