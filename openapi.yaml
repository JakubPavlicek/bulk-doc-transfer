openapi: 3.0.3
info:
  title: Bulk Document Transfer API
  description: Bulk Document Transfer API
  version: 1.0.0
  contact:
    name: The author of the API
    email: jpvlck@students.zcu.cz

servers:
  - url: /api/v1
    description: Server for production environment

tags:
  - name: submissions
    description: Operations related to document submissions

paths:

  /submissions:
    get:
      tags:
        - submissions
      summary: List submissions
      description: Lists all submissions with optional filtering.
      operationId: listSubmissions
      parameters:
        - $ref: '#/components/parameters/SubmitterEmail'
        - $ref: '#/components/parameters/SubmissionState'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Size'
      x-spring-paginated: true
      responses:
        '200':
          description: Submissions retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmissionDetail'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        'default':
          $ref: '#/components/responses/Default'

    post:
      tags:
        - submissions
      summary: Create submission
      description: Creates a new submission.
      operationId: uploadSubmission
      requestBody:
        description: Submission to be created.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSubmission'
      responses:
        '202':
          description: Submission accepted.
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        'default':
          $ref: '#/components/responses/Default'

  /submissions/{submissionId}:
    get:
      tags:
        - submissions
      summary: Get submission
      description: Get submission by ID.
      operationId: getSubmissionById
      parameters:
        - $ref: '#/components/parameters/SubmissionId'
      responses:
        '200':
          description: Submission retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        'default':
          $ref: '#/components/responses/Default'

components:

  parameters:

    SubmissionId:
      name: submissionId
      in: path
      description: Parameter for the submission ID.
      required: true
      schema:
        $ref: '#/components/schemas/SubmissionId'

    SubmitterEmail:
      name: submitterEmail
      in: query
      description: Parameter for the submitter email.
      required: false
      schema:
        $ref: '#/components/schemas/Submitter/properties/email'

    SubmissionState:
      name: state
      in: query
      description: Parameter for the submission state.
      required: false
      schema:
        $ref: '#/components/schemas/SubmissionState'

    Page:
      name: page
      in: query
      description: The page number for pagination.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 10000
        default: 0
        example: 0

    Size:
      name: size
      in: query
      description: Maximum number of results to return.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 10
        default: 10
        example: 10

  schemas:

    SubmissionId:
      type: integer
      format: int64
      title: Submission ID
      description: ID of the submission.
      minimum: 1
      example: 1

    Submitter:
      type: object
      title: Submitter
      description: The submitter of the submission.
      additionalProperties: false
      nullable: false
      required:
        - id
        - email
      properties:
        id:
          type: integer
          format: int64
          description: ID of the submitter.
          minimum: 1
          example: 1
        email:
          title: Submitter Email
          type: string
          format: email
          description: Email of the user.
          example: jpvlck@students.zcu.cz
          maxLength: 255
          minLength: 1

    SubmissionState:
      type: string
      title: Submission State
      description: State of the submission.
      example: "ACCEPTED"
      enum:
        - ACCEPTED
        - PROCESSED
        - SAVED
        - RESPONSE_SENT

    Submission:
      type: object
      title: Submission
      description: Schema for a submission.
      additionalProperties: false
      nullable: false
      required:
        - id
        - submitter
        - subject
        - description
        - referenceNumber
        - createdAt
        - state
        - checkResult
        - files
      properties:
        id:
          $ref: '#/components/schemas/SubmissionId'
        submitter:
          $ref: '#/components/schemas/Submitter'
        subject:
          type: string
          description: Subject of the submission.
          example: "The subject of the submission"
          maxLength: 2000
        description:
          description: Description of the submission.
          type: string
          example: "This is a detailed description of the submission."
          maxLength: 32000
        referenceNumber:
          type: string
          description: |
            Reference number of the submission.
            Format is:
              - Case Type – Randomly chosen from 'C', 'T', 'P'
              - Senate Number – Randomly chosen from '1', '2', '3'
              - Year – Current year (e.g., 2025)
              - Sequential Number – Order number within the case type, senate, and year
          example: "C120251"
          maxLength: 255
        createdAt:
          type: string
          format: date-time
          description: Date and time of the submission creation.
          example: "2025-01-01T00:00:00Z"
        state:
          $ref: '#/components/schemas/SubmissionState'
        checkResult:
          type: string
          description: Result of the check.
          example: "OK"
          enum:
            - OK
            - ELECTRONIC_SIGNATURE
            - MALWARE
        files:
          type: array
          description: Files attached to the submission.
          items:
            $ref: '#/components/schemas/SubmissionFile'
          example:
            - id: 1
              name: "file1.pdf"
              type: "application/pdf"
              size: 1000
              createdAt: "2025-01-01T00:00:00Z"
            - id: 2
              name: "file2.pdf"
              type: "application/pdf"
              size: 500
              createdAt: "2025-01-01T00:00:00Z"

    SubmissionFile:
      type: object
      title: Submission File
      description: Schema for a submission file.
      additionalProperties: false
      nullable: false
      required:
        - id
        - name
        - type
        - size
        - createdAt
      properties:
        id:
          type: integer
          format: int64
          description: ID of the file.
          minimum: 1
          example: 1
        name:
          type: string
          description: Name of the file.
          example: "file.pdf"
          maxLength: 255
        type:
          type: string
          description: MIME type of the file.
          example: "application/pdf"
        size:
          type: integer
          format: int64
          description: Size of the file in bytes.
          minimum: 1
        createdAt:
          type: string
          format: date-time
          description: Date and time of the file creation.
          example: "2025-01-01T00:00:00Z"

    SubmissionDetail:
      type: object
      title: Submission Detail
      description: Schema for a submission detail.
      additionalProperties: false
      nullable: false
      required:
        - id
        - submitterId
        - referenceNumber
        - createdAt
        - state
        - checkResult
      properties:
        id:
          $ref: '#/components/schemas/SubmissionId'
        submitterId:
          $ref: '#/components/schemas/Submission/properties/id'
        referenceNumber:
          $ref: '#/components/schemas/Submission/properties/referenceNumber'
        createdAt:
          $ref: '#/components/schemas/Submission/properties/createdAt'
        state:
          $ref: '#/components/schemas/SubmissionState'
        checkResult:
          $ref: '#/components/schemas/Submission/properties/checkResult'

    CreateSubmission:
      type: object
      title: Create Submission
      description: Schema for creating a new submission.
      additionalProperties: false
      nullable: false
      required:
        - email
        - subject
        - files
      properties:
        email:
          $ref: '#/components/schemas/Submitter/properties/email'
        subject:
          $ref: '#/components/schemas/Submission/properties/subject'
        description:
          $ref: '#/components/schemas/Submission/properties/description'
        files:
          title: Files
          description: Files to be uploaded.
          type: array
          minItems: 1
          maxItems: 5
          items:
            title: File
            description: File to be uploaded.
            type: string
            format: binary
      example:
        email: jpvlck@students.zcu.cz
        subject: "The subject of the submission"
        description: "This is a detailed description of the submission."
        files:
          - file1.pdf

    ProblemDetail:
      type: object
      title: Problem Detail
      description: A generic error, as defined by RFC 7807. It can be extended with additional properties.
      additionalProperties: true
      nullable: false
      required:
        - type
        - title
        - status
        - detail
        - instance
      properties:
        type:
          type: string
          format: uri
          description: A URI reference that identifies the problem type.
          example: http://localhost:8080/submission-not-found
          pattern: ^((about:blank)|(https?://[^\s]+))$
          maxLength: 1000
        title:
          type: string
          description: A short, human-readable summary of the problem type.
          example: Submission Not Found
          pattern: ^[A-Za-z0-9\s\-.,!?:;'"]+$
          maxLength: 255
        status:
          type: integer
          format: int32
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          example: 'Submission with ID: 1 not found'
          pattern: ^[A-Za-z0-9\s\-.,!?:;'"]+$
          maxLength: 1000
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of the problem.
          example: /submissions
          pattern: ^(/[^\s]*)+$
          maxLength: 1000

  responses:

    400BadRequest:
      description: Bad request.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: http://localhost:8080/api/v1/bad-request
            title: Bad Request
            status: 400
            detail: Email is not valid.
            instance: /api/v1/submissions

    404NotFound:
      description: The specified resource was not found.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: http://localhost:8080/api/v1/person-not-found
            title: Person Not Found
            status: 404
            detail: 'Submission with ID: 1 not found'
            instance: /api/v1/submissions/1

    500InternalServerError:
      description: Internal server error.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: http://localhost:8080/api/v1/internal-server-error
            title: Internal server error
            status: 500
            detail: An unexpected error occurred
            instance: /api/v1/submissions

    Default:
      description: Unexpected error.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'